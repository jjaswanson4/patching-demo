---

- name: import validation playbook
  ansible.builtin.import_playbook: validate-selected-demo.yml

- name: configure an instance of controller to provision {{ demo }} demo
  hosts:
    - localhost
  gather_facts: no
  vars:
    resources_path: ../resources
    controller_resources: "{{ resources_path }}/controller/"
  vars_files:
    - demos/patching/vars/provisioner-configuration.yml
  pre_tasks:
    - name: load in preconfigured resources
      ansible.builtin.set_fact:
        preconfigured:
          controller_organizations: "{{ lookup('file', controller_resources + 'organizations.yml') | from_yaml }}"
          controller_credential_types: "{{ lookup('file', controller_resources + 'credential-types.yml') | from_yaml }}"
          controller_credentials: "{{ lookup('file', controller_resources + 'credentials.yml') | from_yaml }}"
          controller_execution_environments: "{{ lookup('file', controller_resources + 'execution-environments.yml') | from_yaml }}"
          controller_inventories: "{{ lookup('file', controller_resources + 'inventories.yml') | from_yaml }}"
          controller_hosts: "{{ lookup('file', controller_resources + 'hosts.yml') | from_yaml }}"

    - name: add demo specific resources
      ansible.builtin.set_fact:
        controller_organizations: "{{ preconfigured.controller_organizations + controller_organizations }}"
        controller_credential_types: "{{ preconfigured.controller_credential_types + controller_credential_types }}"
        controller_credentials: "{{ preconfigured.controller_credentials + controller_credentials }}"
        controller_execution_environments: "{{ preconfigured.controller_execution_environments + controller_execution_environments }}"
        controller_inventories: "{{ preconfigured.controller_inventories + controller_inventories }}"
        controller_hosts: "{{ preconfigured.controller_hosts + controller_hosts }}"

    - name: set facts so ansible instanciates vars
      ansible.builtin.set_fact:
        controller_organizations: "{{ lookup('vars', 'controller_organizations') | default(omit) }}"
        controller_credential_types: "{{ lookup('vars', 'controller_credential_types') | default(omit) }}"
        controller_credentials: "{{ lookup('vars', 'controller_credentials') | default(omit) }}"
        controller_execution_environments: "{{ lookup('vars', 'controller_execution_environments') | default(omit) }}"
        controller_inventories: "{{ lookup('vars', 'controller_inventories') | default(omit) }}"
        controller_hosts: "{{ lookup('vars', 'controller_hosts') | default(omit) }}"
        controller_groups: "{{ lookup('vars', 'controller_groups') | default(omit) }}"
        controller_projects: "{{ lookup('vars', 'controller_projects') | default(omit) }}"

  roles:
    - redhat_cop.controller_configuration.organizations
    - redhat_cop.controller_configuration.credential_types
    - redhat_cop.controller_configuration.credentials
    - redhat_cop.controller_configuration.execution_environments
    - redhat_cop.controller_configuration.inventories
    - redhat_cop.controller_configuration.hosts
    - redhat_cop.controller_configuration.groups
    - redhat_cop.controller_configuration.projects
    # - redhat_cop.controller_configuration.job_templates
    # - redhat_cop.controller_configuration.workflow_job_templates
    # - redhat_cop.controller_configuration.users
    # - redhat_cop.controller_configuration.teams
    # - redhat_cop.controller_configuration.roles

# - name: apply {{ demo }} demo provisioner configuration to ansible controller
#   hosts:
#     - localhost
#   gather_facts: no
#   vars_files:
#     - "demos/{{ demo }}/vars/provisioner-configuration.yml" 
#   roles:
#     - redhat_cop.controller_configuration.organizations
#     - redhat_cop.controller_configuration.credential_types
#     - redhat_cop.controller_configuration.credentials
#     - redhat_cop.controller_configuration.execution_environments
#     - redhat_cop.controller_configuration.inventories
#     - redhat_cop.controller_configuration.hosts
#     - redhat_cop.controller_configuration.groups
#     - redhat_cop.controller_configuration.projects
#     - redhat_cop.controller_configuration.job_templates
#     - redhat_cop.controller_configuration.workflow_job_templates
#     - redhat_cop.controller_configuration.users
#     - redhat_cop.controller_configuration.teams
#     - redhat_cop.controller_configuration.roles

# - name: perform post-provisioner configuration items
#   hosts:
#     - localhost
#   gather_facts: no
#   vars_files:
#     - "demos/{{ demo }}/vars/provisioner-configuration.yml" 
#   tasks:
#     - name: give demo provisioner team access to new provisioning workflows
#       ansible.builtin.include_role:
#         name: redhat_cop.controller_configuration.roles
#       vars:
#         controller_roles:
#           - team: Demo Provisioner Team
#             role: execute
#             workflows: "{{ controller_workflows | community.general.json_query('[*].name') }}"
