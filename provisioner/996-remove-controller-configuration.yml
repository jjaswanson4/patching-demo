---

- name: remove appropriate configurations from Ansible Controller
  hosts:
    - all
  gather_facts: no
  vars:
    controller_state: absent
  vars_files:
    - vars/controller-configuration.yml
  #pre_tasks:
  #  - name: set controller_state to absent
  #    ansible.builtin.set_fact:
  #      controller_state: absent
  #   - name: gather up organizations to remove
  #     ansible.builtin.set_fact:
  #       controller_organizations_to_remove: "{{ controller_organizations_to_remove | default([]) + [ {'name': item.name, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_organizations }}"
  #   - name: gather up credentials to remove
  #     ansible.builtin.set_fact:
  #       controller_credentials_to_remove: "{{ controller_credentials_to_remove | default([]) + [ {'name': item.name, 'credential_type': item.credential_type, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_credentials }}"
  #   - name: gather up execution environments to remove
  #     ansible.builtin.set_fact:
  #       controller_execution_environments_to_remove: "{{ controller_execution_environments_to_remove | default([]) + [ {'name': item.name, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_execution_environments }}"
  #   - name: gather up teams to remove
  #     ansible.builtin.set_fact:
  #       controller_teams_to_remove: "{{ controller_teams_to_remove | default([]) + [ {'name': item.name, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_teams }}"
  #   - name: gather up users to remove
  #     ansible.builtin.set_fact:
  #       controller_user_accounts_to_remove: "{{ controller_user_accounts_to_remove | default([]) + [ {'username': item.username, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_user_accounts }}"
  #   - name: gather up inventories to remove
  #     ansible.builtin.set_fact:
  #       controller_inventories_to_remove: "{{ controller_inventories_to_remove | default([]) + [ {'name': item.name, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_inventories }}"
  #   - name: gather up projects to remove
  #     ansible.builtin.set_fact:
  #       controller_projects_to_remove: "{{ controller_projects_to_remove | default([]) + [ {'name': item.name, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_projects }}"   
  #   - name: gather up job templates to remove
  #     ansible.builtin.set_fact:
  #       controller_templates_to_remove: "{{ controller_templates_to_remove | default([]) + [ {'name': item.name, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_templates }}"
  #   - name: gather up workflows to remove
  #     ansible.builtin.set_fact:
  #       controller_workflows_to_remove: "{{ controller_workflows_to_remove | default([]) + [ {'name': item.name, 'organization': item.organization, 'state': 'absent'} ] }}"
  #     loop: "{{ controller_workflows }}"

  #   - name: set new var defs
  #     ansible.builtin.set_fact:
  #       controller_organizations: "{{ controller_organizations_to_remove }}"
  #       controller_credentials: "{{ controller_credentials_to_remove }}"
  #       controller_execution_environments: "{{ controller_execution_environments }}"
  #       controller_teams: "{{ controller_teams_to_remove }}"
  #       controller_user_accounts: "{{ controller_user_accounts_to_remove }}"
  #       controller_inventories: "{{ controller_inventories_to_remove }}"
  #       controller_templates: "{{ controller_templates_to_remove }}"
  #       controller_workflows: "{{ controller_workflows_to_remove }}"
 
  roles:
    - redhat_cop.controller_configuration.workflow_job_templates
    - redhat_cop.controller_configuration.job_templates
    - redhat_cop.controller_configuration.projects
    - redhat_cop.controller_configuration.inventories
    - redhat_cop.controller_configuration.teams
    - redhat_cop.controller_configuration.users
    - redhat_cop.controller_configuration.execution_environments
    - redhat_cop.controller_configuration.credentials
    - redhat_cop.controller_configuration.organizations
    