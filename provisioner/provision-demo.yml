---

- name: build out satellite
  hosts:
    - satellite
  gather_facts: no
  roles:
    - jjaswanson4.utilities.idm_dns_records
    - jjaswanson4.utilities.provision_via_satellite
    - jjaswanson4.utilities.stop_networkmanager_dns
    - jjaswanson4.utilities.add_virtual_disk
    - jjaswanson4.utilities.common_config
    - redhat.rhel_system_roles.selinux
    - redhat.rhel_system_roles.timesync
    - jjaswanson4.setup_rhel_for_satellite.setup_storage
    - jjaswanson4.install_satellite.install_satellite
    - jjaswanson4.configure_satellite.configure_satellite_foreman
  tasks:
    - name: build satellite by organization
      include_role:
        name: jjaswanson4.configure_satellite.configure_satellite_katello
      loop_control:
        loop_var: organization
      loop: "{{ satellite.katello }}"
    - name: do that again but for katello dependent pieces
      include_role:
        name: jjaswanson4.configure_satellite.configure_satellite_foreman
      vars:
        requires_katello_content: true

- name: build out tower
  hosts:
    - tower
  gather_facts: no
  roles:
    - jjaswanson4.utilities.idm_dns_records
    - jjaswanson4.utilities.provision_via_satellite
    - jjaswanson4.utilities.stop_networkmanager_dns
    - jjaswanson4.utilities.common_config
    - redhat.rhel_system_roles.selinux
    - redhat.rhel_system_roles.timesync
    - jjaswanson4.utilities.install_aap

- name: configure tower
  hosts:
    - localhost
  vars_files:
    - vars/tower-configuration.yml
  roles:
    - redhat_cop.tower_configuration.license
    - redhat_cop.tower_configuration.credentials
    - redhat_cop.tower_configuration.tower_settings
    - redhat_cop.tower_configuration.organizations
    - redhat_cop.tower_configuration.projects
    - redhat_cop.tower_configuration.inventories
    - redhat_cop.tower_configuration.hosts
    - redhat_cop.tower_configuration.groups
    - redhat_cop.tower_configuration.job_templates

- name: provision managed hosts
  hosts:
    - demo_hosts
  gather_facts: no
  roles:
    - jjaswanson4.utilities.idm_dns_records
    - jjaswanson4.utilities.provision_via_satellite
    - jjaswanson4.utilities.stop_networkmanager_dns
    - jjaswanson4.utilities.common_config
    - redhat.rhel_system_roles.selinux
    - redhat.rhel_system_roles.timesync
    - jjaswanson4.utilities.add_virtual_disk
    - redhat.rhel_system_roles.storage
    - jjaswanson4.utilities.mount_nfs_shares
    - sap-preconfigure
    - redhat_sap.sap_hostagent
  post_tasks:
    - name: check if reboot is required
      ansible.builtin.shell: yum needs-restarting -r
      changed_when: false
      ignore_errors: true
      register: reboot_needed
    - name: reboot system
      ansible.builtin.reboot:
      when:
        - reboot_needed.rc | int != 0

- name: prep for SAP HANA install
  hosts:
    - hana
  roles:
    - sap-hana-preconfigure
  post_tasks:
    - name: check if reboot is required
      ansible.builtin.shell: yum needs-restarting -r
      changed_when: false
      ignore_errors: true
      register: reboot_needed
    - name: reboot system
      ansible.builtin.reboot:
      when:
        - reboot_needed.rc | int != 0

- name: install SAP HANA
  hosts:
    - hana
  roles:  
    - redhat_sap.sap_hana_deployment

- name: prep for S4 install
  hosts:
    - app
  roles:
    - sap-netweaver-preconfigure
  post_tasks:
    - name: check if reboot is required
      ansible.builtin.shell: yum needs-restarting -r
      changed_when: false
      ignore_errors: true
      register: reboot_needed
    - name: reboot system
      ansible.builtin.reboot:
      when:
        - reboot_needed.rc | int != 0

- name: install S4
  hosts:
    - app
  roles:
    - redhat_sap.sap_s4hana_deployment

- name: prepare new content views for monthly patching
  hosts:
    - satellite
  gather_facts: false
  tasks:
    - name: update content views for this patch cycle
      block:
        - name: remove content view filter used for demo purposes
          redhat.satellite.content_view_filter:
            username: "{{ satellite.admin_username }}"
            password: "{{ satellite.admin_password }}"
            validate_certs: false
            server_url: "https://{{ ansible_fqdn }}"
            organization: "{{ satellite.organization }}"
            name: "{{ satellite.content_view_filter_name }}"
            filter_state: absent
            filter_type: erratum
            content_view: "{{ content_view.name }}"
          loop_control:
            loop_var: content_view
          loop: "{{ satellite.content_views }}"
        - name: "publish content view to the library"
          redhat.satellite.content_view_version:
            username: "{{ satellite.username }}"
            password: "{{ satellite.password }}"
            validate_certs: false
            server_url: "{{ satellite.url }}"
            organization: "{{ satellite.organization }}"
            content_view: "{{ content_view.name }}"
            lifecycle_environments:
              - Library
          loop_control:
            loop_var: content_view
          loop: "{{ satellite.content_views }}"
        - name: "publish new version of composite content view {{ satellite.composite_content_view }}"
          redhat.satellite.content_view_version:
            username: "{{ satellite.username }}"
            password: "{{ satellite.password }}"
            validate_certs: false
            server_url: "{{ satellite.url }}"
            organization: "{{ satellite.organization }}"
            content_view: "{{ satellite.composite_content_view }}"
            lifecycle_environments:
              - Library
              - Non_Production
      delegate_to: localhost